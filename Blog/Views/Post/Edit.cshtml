@model Blog.Models.Post

@{
    ViewBag.Title = "Edit";
}

@Styles.Render("~/Scripts/kindEditor")
@Scripts.Render("~/Scripts/kindEditor")

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Post</legend>

        @Html.HiddenFor(model => model.Id)


        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
          @Html.DropDownListFor( model=>model.Status, (List<SelectListItem>)ViewBag.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
           <div class="editor-label"><label>分类</label></div>
        <div>
            @{
    int count = 0;
    foreach (var item in (IEnumerable<Blog.Models.Category>)ViewBag.Categories)
    {

        if (Model.Categories.Contains(item))
        {
               <input type="checkbox" name="Category" value="@item.Id" checked="checked" />@item.Name
        }
        else
        {
              <input type="checkbox" name="Category" value="@item.Id"  />@item.Name
        }
        
              
        count++;
        if (count == 5)
        {
            count = 0;
                <br />
        }
    }
            }
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Content)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Content, new { @id = "content" })
            @Html.ValidationMessageFor(model => model.Content)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var editor;
        KindEditor.ready(function (K) {
            editor = K.create('textarea[id="content"]', {
                resizeType: 1,
                allowPreviewEmoticons: false,
                allowImageUpload: false,
                items: [
                    'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold', 'italic', 'underline',
                    'removeformat', '|', 'justifyleft', 'justifycenter', 'justifyright', 'insertorderedlist',
                    'insertunorderedlist', '|', 'emoticons', 'image', 'link']
            });
        });
    </script>

}
